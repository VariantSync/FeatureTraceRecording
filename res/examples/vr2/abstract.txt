== insert under context A ==> // function will be mapped to A, g and h to null because they inherit A

void f() {
    g();
    h();
}

== insert under context B ==> // condition is mapped to B

void f() {
    if (cond) {

    }
    g();
    h();
}

== move under context A ==> // g is still mapped to null

void f() {
    if (cond) {
        g();
    }
    h();
}

== delete under context C ==> // h is now mapped to "not C"
void f() {
    if (cond) {
        g();
    }
}

== insert under context C ==> // h2 is mapped to C

void f() {
    if (cond) {
        g();
    }
    h2();
}